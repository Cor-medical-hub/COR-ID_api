
const modalConfigs = {
    columnSelectModal: { width: '250px', height: '300px', top: '300px', left: '200px' },
    corIdModal: { width: '300px', height: '500px', top: '300px', left: '250px' },
    editModal: { width: '250px', height: '500px', top: '50px', left: '50px' },
    myModal: { width: '250px', height: '500px', top: '50px', left: '250px' },
    settingsModal: { width: '500px', height: '560px', top: '50px', left: '450px' },
};

function makeModalDraggable(modalId) {
    const modal = document.getElementById(modalId);
    const header = modal.querySelector('.modal-header');
    let isDragging = false;
    let offsetX = 0, offsetY = 0;

    header.onmousedown = function(e) {
        isDragging = true;
        // –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        offsetX = e.clientX - modal.offsetLeft;
        offsetY = e.clientY - modal.offsetTop;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –º—ã—à–∏
        document.onmousemove = function(e) {
            if (isDragging) {
                modal.style.left = `${e.clientX - offsetX}px`;
                modal.style.top = `${e.clientY - offsetY}px`;
            }
        };

        document.onmouseup = function() {
            isDragging = false;
            document.onmousemove = null;
            document.onmouseup = null;
        };
    };
}


// –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const modalStates = {};

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal(modalId) {
    console.log(`–ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${modalId}`); 
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'none';
    } else {
        console.error(`–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å id "${modalId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
    }
}


// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function minimizeModal(modalId) {
    const modal = document.getElementById(modalId);
    const maximizeButton = modal.querySelector('[data-action="maximize"]');

    if (modal) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–µ–π
        if (!modalStates[modalId]?.minimized) {
            modalStates[modalId] = {
                ...modalStates[modalId],
                width: modal.style.width || getComputedStyle(modal).width,
                height: modal.style.height || getComputedStyle(modal).height,
                top: modal.style.top || getComputedStyle(modal).top,
                left: modal.style.left || getComputedStyle(modal).left,
                minimized: true,
                maximized: false,
            };
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏—é
        modal.classList.add('minimized');
        modal.style.width = '200px'; // –†–∞–∑–º–µ—Ä—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.style.height = '40px';
        modal.style.top = 'auto';
        modal.style.left = '10px';
        modal.style.transform = 'none';

        // –ò–∑–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        if (maximizeButton) maximizeButton.textContent = 'üóñ';
    } else {
        console.error(`–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å id "${modalId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
    }
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏–∏/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

function maximizeModal(modalId) {
    const modal = document.getElementById(modalId);
    const maximizeButton = modal.querySelector('[data-action="maximize"]');

    if (modal) {
        const isMaximized = modalStates[modalId]?.maximized || false;
        const isMinimized = modalStates[modalId]?.minimized || false;

        if (isMinimized) {
            // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            modal.classList.remove('minimized');
            modal.style.width = modalStates[modalId].width;
            modal.style.height = modalStates[modalId].height;
            modal.style.top = modalStates[modalId].top;
            modal.style.left = modalStates[modalId].left;
            modal.style.transform = 'none';
            modalStates[modalId].minimized = false;

            // –ò–∑–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–≤–æ–π–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç
            if (maximizeButton) maximizeButton.textContent = 'üóñ';
        } else if (isMaximized) {
            // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞ –¥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ modalConfigs
            const defaultConfig = modalConfigs[modalId];
            if (defaultConfig) {
                modal.style.width = defaultConfig.width;
                modal.style.height = defaultConfig.height;
                modal.style.top = defaultConfig.top;
                modal.style.left = defaultConfig.left;
                modal.style.transform = 'none';
            }
            modalStates[modalId].maximized = false;

            // –ò–∑–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–≤–æ–π–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç
            if (maximizeButton) maximizeButton.textContent = 'üóñ';
        } else {
            // –ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –æ–∫–Ω–∞
            modalStates[modalId] = {
                ...modalStates[modalId],
                width: modal.style.width || getComputedStyle(modal).width,
                height: modal.style.height || getComputedStyle(modal).height,
                top: modal.style.top || getComputedStyle(modal).top,
                left: modal.style.left || getComputedStyle(modal).left,
            };

            modal.style.width = '100%';
            modal.style.height = '100%';
            modal.style.top = '0';
            modal.style.left = '0';
            modal.style.transform = 'none';
            modalStates[modalId].maximized = true;

            // –ò–∑–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç
            if (maximizeButton) maximizeButton.textContent = 'üóó';
        }
    } else {
        console.error(`–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å id "${modalId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
    }
}


function initModalControls(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        const closeButton = modal.querySelector('[data-action="close"]');
        const minimizeButton = modal.querySelector('[data-action="minimize"]');
        const maximizeButton = modal.querySelector('[data-action="maximize"]');

        if (closeButton) closeButton.addEventListener('click', () => closeModal(modalId));
        if (minimizeButton) minimizeButton.addEventListener('click', () => minimizeModal(modalId));
        if (maximizeButton) maximizeButton.addEventListener('click', () => maximizeModal(modalId));

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        const config = modalConfigs[modalId];
        if (config) {
            modal.style.width = config.width;
            modal.style.height = config.height;
            modal.style.top = config.top;
            modal.style.left = config.left;
            modal.style.transform = 'none'; // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∫–Ω–∞
        modalStates[modalId] = {
            maximized: false,
            minimized: false,
            ...config // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        };
    } else {
        console.error(`–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å id "${modalId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
    }
}



// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function initAllModals() {
    const modals = document.querySelectorAll('.modal'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏–º–µ—é—Ç –∫–ª–∞—Å—Å "modal"
    modals.forEach((modal) => {
        const modalId = modal.id;
        if (modalId) {
            initModalControls(modalId);
        }
    });
}


// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initAllModals);

"""add case, sample, cassette, glass and case parameters models v1.0.0.12

Revision ID: f81d711d9548
Revises: 162691655122
Create Date: 2025-04-28 11:53:03.272160

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f81d711d9548"
down_revision: Union[str, None] = "162691655122"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cases",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("patient_id", sa.String(length=36), nullable=True),
        sa.Column("creation_date", sa.DateTime(), nullable=True),
        sa.Column("case_code", sa.String(length=250), nullable=True),
        sa.Column("bank_count", sa.Integer(), nullable=True),
        sa.Column("cassette_count", sa.Integer(), nullable=True),
        sa.Column("glass_count", sa.Integer(), nullable=True),
        sa.Column(
            "grossing_status",
            sa.Enum("PROCESSING", "COMPLETED", name="grossing_status"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cases_case_code"), "cases", ["case_code"], unique=False)
    op.create_index(op.f("ix_cases_patient_id"), "cases", ["patient_id"], unique=False)
    op.create_table(
        "case_parameters",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("case_id", sa.String(length=36), nullable=False),
        sa.Column(
            "macro_archive", sa.Enum("ESS", "RSS", name="macroarchive"), nullable=True
        ),
        sa.Column(
            "decalcification",
            sa.Enum("ABSENT", "EDTA", "ACIDIC", name="decalcificationtype"),
            nullable=True,
        ),
        sa.Column(
            "sample_type", sa.Enum("NATIVE", "BLOCKS", name="sampletype"), nullable=True
        ),
        sa.Column(
            "material_type",
            sa.Enum("R", "B", "E", "C", "CB", "S", "A", "EM", name="materialtype"),
            nullable=True,
        ),
        sa.Column("urgency", sa.Enum("S", "U", "F", name="urgencytype"), nullable=True),
        sa.Column("container_count_actual", sa.Integer(), nullable=True),
        sa.Column(
            "fixation",
            sa.Enum(
                "NBF_10",
                "OSMIUM",
                "BOUIN",
                "ALCOHOL",
                "GLUTARALDEHYDE_2",
                "OTHER",
                name="fixationtype",
            ),
            nullable=True,
        ),
        sa.Column("macro_description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["cases.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("case_id"),
    )
    op.create_table(
        "samples",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("case_id", sa.String(length=36), nullable=False),
        sa.Column("sample_number", sa.String(length=50), nullable=True),
        sa.Column("cassette_count", sa.Integer(), nullable=True),
        sa.Column("glass_count", sa.Integer(), nullable=True),
        sa.Column("archive", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["case_id"],
            ["cases.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cassettes",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("sample_id", sa.String(length=36), nullable=False),
        sa.Column("cassette_number", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["sample_id"],
            ["samples.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "glasses",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("cassette_id", sa.String(length=36), nullable=False),
        sa.Column("glass_number", sa.Integer(), nullable=True),
        sa.Column(
            "staining",
            sa.Enum(
                "HE",
                "ALCIAN_PAS",
                "CONGO_RED",
                "MASSON_TRICHROME",
                "VAN_GIESON",
                "ZIEHL_NEELSEN",
                "WARTHIN_STARRY_SILVER",
                "GROCOTT_METHENAMINE_SILVER",
                "TOLUIDINE_BLUE",
                "PERLS_PRUSSIAN_BLUE",
                "PAMS",
                "PICROSIRIUS",
                "SIRIUS_RED",
                "THIOFLAVIN_T",
                "TRICHROME_AFOG",
                "VON_KOSSA",
                "GIEMSA",
                "OTHAR",
                name="stainingtype",
            ),
            nullable=True,
        ),
        sa.Column("glass_data", sa.LargeBinary(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cassette_id"],
            ["cassettes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("glasses")
    op.drop_table("cassettes")
    op.drop_table("samples")
    op.drop_table("case_parameters")
    op.drop_index(op.f("ix_cases_patient_id"), table_name="cases")
    op.drop_index(op.f("ix_cases_case_code"), table_name="cases")
    op.drop_table("cases")
    # ### end Alembic commands ###

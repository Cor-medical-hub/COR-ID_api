name: prod-cor-id_v2

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: massivecapybara/corid_api:latest
    ports:
      - "8001:8000"
    # volumes:
    #   - .:/app
    depends_on:
      - prometheus
      - postgres  
    env_file:
#      - development.env
#      - dev-cor-identity.env
      - prod-corid.cor-medical.ua.env
#    links:
#      - postgres
#    networks:
#      - backend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"


  postgres:
    image: postgres:latest
    env_file:
#      - development.env
#      - dev-cor-identity.env
      - prod-corid.cor-medical.ua.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  
#    networks:
#      - backend

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    user: "0:0" 
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
      - ./:/app
      - loki-data:/wal
      - compactor-data:/tmp/loki/compactor

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./:/app
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

volumes:
  postgres_data:
  grafana-storage:
  loki-data:
  compactor-data:

#networks:
#  backend: {}
